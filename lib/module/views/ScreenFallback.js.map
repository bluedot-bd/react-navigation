{"version":3,"sources":["ScreenFallback.tsx"],"names":["ResourceSavingView","React","View","Screens","require","e","MaybeScreenContainer","enabled","rest","screensEnabled","MaybeScreen","visible","children"],"mappings":";;AAAA,SAASA,kBAAT,QAAmC,4BAAnC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAAoBC,IAApB,QAAsD,cAAtD;AASA,IAAIC,OAAJ;;AAEA,IAAI;AACFA,EAAAA,OAAO,GAAGC,OAAO,CAAC,sBAAD,CAAjB;AACD,CAFD,CAEE,OAAOC,CAAP,EAAU,CACV;AACD;;AAED,OAAO,MAAMC,oBAAoB,GAAG,QAO9B;AAAA;;AAAA,MAP+B;AACnCC,IAAAA,OADmC;AAEnC,OAAGC;AAFgC,GAO/B;;AACJ,kBAAIL,OAAJ,8DAAI,SAASM,cAAb,kDAAI,oCAAJ,EAAiC;AAC/B,wBAAO,oBAAC,OAAD,CAAS,eAAT;AAAyB,MAAA,OAAO,EAAEF;AAAlC,OAA+CC,IAA/C,EAAP;AACD;;AAED,sBAAO,oBAAC,IAAD,EAAUA,IAAV,CAAP;AACD,CAbM;AAeP,OAAO,SAASE,WAAT,QAA4D;AAAA;;AAAA,MAAvC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqB,OAAGJ;AAAxB,GAAuC;;AACjE,mBAAIL,OAAJ,+DAAI,UAASM,cAAb,kDAAI,qCAAJ,EAAiC;AAC/B,wBACE,oBAAC,OAAD,CAAS,MAAT;AAAgB,MAAA,aAAa,EAAEE,OAAO,GAAG,CAAH,GAAO;AAA7C,OAAoDH,IAApD,GACGI,QADH,CADF;AAKD;;AAED,sBACE,oBAAC,kBAAD;AAAoB,IAAA,OAAO,EAAED;AAA7B,KAA0CH,IAA1C,GACGI,QADH,CADF;AAKD","sourcesContent":["import { ResourceSavingView } from '@react-navigation/elements';\r\nimport * as React from 'react';\r\nimport { StyleProp, View, ViewProps, ViewStyle } from 'react-native';\r\n\r\ntype Props = {\r\n  visible: boolean;\r\n  children: React.ReactNode;\r\n  enabled: boolean;\r\n  style?: StyleProp<ViewStyle>;\r\n};\r\n\r\nlet Screens: typeof import('react-native-screens') | undefined;\r\n\r\ntry {\r\n  Screens = require('react-native-screens');\r\n} catch (e) {\r\n  // Ignore\r\n}\r\n\r\nexport const MaybeScreenContainer = ({\r\n  enabled,\r\n  ...rest\r\n}: ViewProps & {\r\n  enabled: boolean;\r\n  hasTwoStates: boolean;\r\n  children: React.ReactNode;\r\n}) => {\r\n  if (Screens?.screensEnabled?.()) {\r\n    return <Screens.ScreenContainer enabled={enabled} {...rest} />;\r\n  }\r\n\r\n  return <View {...rest} />;\r\n};\r\n\r\nexport function MaybeScreen({ visible, children, ...rest }: Props) {\r\n  if (Screens?.screensEnabled?.()) {\r\n    return (\r\n      <Screens.Screen activityState={visible ? 2 : 0} {...rest}>\r\n        {children}\r\n      </Screens.Screen>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ResourceSavingView visible={visible} {...rest}>\r\n      {children}\r\n    </ResourceSavingView>\r\n  );\r\n}\r\n"]}