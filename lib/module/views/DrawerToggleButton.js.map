{"version":3,"sources":["DrawerToggleButton.tsx"],"names":["PlatformPressable","DrawerActions","useNavigation","React","Image","Platform","StyleSheet","DrawerToggleButton","tintColor","rest","navigation","borderless","dispatch","toggleDrawer","styles","touchable","select","ios","undefined","default","top","right","bottom","left","icon","require","create","height","width","margin","resizeMode","marginHorizontal"],"mappings":";;AAAA,SAASA,iBAAT,QAAkC,4BAAlC;AACA,SACEC,aADF,EAGEC,aAHF,QAIO,0BAJP;AAKA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,cAA5C;AAWA,eAAe,SAASC,kBAAT,OAA2D;AAAA,MAA/B;AAAEC,IAAAA,SAAF;AAAa,OAAGC;AAAhB,GAA+B;AACxE,QAAMC,UAAU,GAAGR,aAAa,EAAhC;AAEA,sBACE,oBAAC,iBAAD,eACMO,IADN;AAEE,IAAA,UAAU,MAFZ;AAGE,IAAA,iBAAiB,EAAC,QAHpB;AAIE,IAAA,cAAc,EAAE;AAAEE,MAAAA,UAAU,EAAE;AAAd,KAJlB;AAKE,IAAA,OAAO,EAAE,MAAMD,UAAU,CAACE,QAAX,CAAoBX,aAAa,CAACY,YAAd,EAApB,CALjB;AAME,IAAA,KAAK,EAAEC,MAAM,CAACC,SANhB;AAOE,IAAA,OAAO,EAAEV,QAAQ,CAACW,MAAT,CAAgB;AACvBC,MAAAA,GAAG,EAAEC,SADkB;AAEvBC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,GAAG,EAAE,EAAP;AAAWC,QAAAA,KAAK,EAAE,EAAlB;AAAsBC,QAAAA,MAAM,EAAE,EAA9B;AAAkCC,QAAAA,IAAI,EAAE;AAAxC;AAFc,KAAhB;AAPX,mBAYE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAE,CAACT,MAAM,CAACU,IAAR,EAAchB,SAAS,GAAG;AAAEA,MAAAA;AAAF,KAAH,GAAmB,IAA1C,CADT;AAEE,IAAA,MAAM,EAAEiB,OAAO,CAAC,iCAAD,CAFjB;AAGE,IAAA,YAAY,EAAE;AAHhB,IAZF,CADF;AAoBD;AAED,MAAMX,MAAM,GAAGR,UAAU,CAACoB,MAAX,CAAkB;AAC/BF,EAAAA,IAAI,EAAE;AACJG,IAAAA,MAAM,EAAE,EADJ;AAEJC,IAAAA,KAAK,EAAE,EAFH;AAGJC,IAAAA,MAAM,EAAE,CAHJ;AAIJC,IAAAA,UAAU,EAAE;AAJR,GADyB;AAO/Bf,EAAAA,SAAS,EAAE;AACTgB,IAAAA,gBAAgB,EAAE;AADT;AAPoB,CAAlB,CAAf","sourcesContent":["import { PlatformPressable } from '@react-navigation/elements';\r\nimport {\r\n  DrawerActions,\r\n  ParamListBase,\r\n  useNavigation,\r\n} from '@react-navigation/native';\r\nimport * as React from 'react';\r\nimport { Image, Platform, StyleSheet } from 'react-native';\r\n\r\nimport type { DrawerNavigationProp } from '../types';\r\n\r\ntype Props = {\r\n  accessibilityLabel?: string;\r\n  pressColor?: string;\r\n  pressOpacity?: number;\r\n  tintColor?: string;\r\n};\r\n\r\nexport default function DrawerToggleButton({ tintColor, ...rest }: Props) {\r\n  const navigation = useNavigation<DrawerNavigationProp<ParamListBase>>();\r\n\r\n  return (\r\n    <PlatformPressable\r\n      {...rest}\r\n      accessible\r\n      accessibilityRole=\"button\"\r\n      android_ripple={{ borderless: true }}\r\n      onPress={() => navigation.dispatch(DrawerActions.toggleDrawer())}\r\n      style={styles.touchable}\r\n      hitSlop={Platform.select({\r\n        ios: undefined,\r\n        default: { top: 16, right: 16, bottom: 16, left: 16 },\r\n      })}\r\n    >\r\n      <Image\r\n        style={[styles.icon, tintColor ? { tintColor } : null]}\r\n        source={require('./assets/toggle-drawer-icon.png')}\r\n        fadeDuration={0}\r\n      />\r\n    </PlatformPressable>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  icon: {\r\n    height: 24,\r\n    width: 24,\r\n    margin: 3,\r\n    resizeMode: 'contain',\r\n  },\r\n  touchable: {\r\n    marginHorizontal: 11,\r\n  },\r\n});\r\n"]}