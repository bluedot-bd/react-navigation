{"version":3,"sources":["DrawerContentScrollView.tsx"],"names":["React","I18nManager","ScrollView","StyleSheet","useSafeAreaInsets","DrawerPositionContext","DrawerContentScrollView","ref","contentContainerStyle","style","children","rest","drawerPosition","useContext","insets","isRight","isRTL","paddingTop","top","paddingStart","left","paddingEnd","right","styles","container","forwardRef","create","flex"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,WADF,EAEEC,UAFF,EAIEC,UAJF,QAKO,cALP;AAMA,SAASC,iBAAT,QAAkC,gCAAlC;AAEA,OAAOC,qBAAP,MAAkC,gCAAlC;;AAMA,SAASC,uBAAT,OAEEC,GAFF,EAGE;AAAA,MAFA;AAAEC,IAAAA,qBAAF;AAAyBC,IAAAA,KAAzB;AAAgCC,IAAAA,QAAhC;AAA0C,OAAGC;AAA7C,GAEA;AACA,QAAMC,cAAc,GAAGZ,KAAK,CAACa,UAAN,CAAiBR,qBAAjB,CAAvB;AACA,QAAMS,MAAM,GAAGV,iBAAiB,EAAhC;AAEA,QAAMW,OAAO,GAAGd,WAAW,CAACe,KAAZ,GACZJ,cAAc,KAAK,MADP,GAEZA,cAAc,KAAK,OAFvB;AAIA,sBACE,oBAAC,UAAD,eACMD,IADN;AAEE,IAAA,GAAG,EAAEJ,GAFP;AAGE,IAAA,qBAAqB,EAAE,CACrB;AACEU,MAAAA,UAAU,EAAEH,MAAM,CAACI,GAAP,GAAa,CAD3B;AAEEC,MAAAA,YAAY,EAAE,CAACJ,OAAD,GAAWD,MAAM,CAACM,IAAlB,GAAyB,CAFzC;AAGEC,MAAAA,UAAU,EAAEN,OAAO,GAAGD,MAAM,CAACQ,KAAV,GAAkB;AAHvC,KADqB,EAMrBd,qBANqB,CAHzB;AAWE,IAAA,KAAK,EAAE,CAACe,MAAM,CAACC,SAAR,EAAmBf,KAAnB;AAXT,MAaGC,QAbH,CADF;AAiBD;;AAED,4BAAeV,KAAK,CAACyB,UAAN,CAAiBnB,uBAAjB,CAAf;AAEA,MAAMiB,MAAM,GAAGpB,UAAU,CAACuB,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE;AADG;AADoB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  I18nManager,\r\n  ScrollView,\r\n  ScrollViewProps,\r\n  StyleSheet,\r\n} from 'react-native';\r\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\r\n\r\nimport DrawerPositionContext from '../utils/DrawerPositionContext';\r\n\r\ntype Props = ScrollViewProps & {\r\n  children: React.ReactNode;\r\n};\r\n\r\nfunction DrawerContentScrollView(\r\n  { contentContainerStyle, style, children, ...rest }: Props,\r\n  ref?: React.Ref<ScrollView>\r\n) {\r\n  const drawerPosition = React.useContext(DrawerPositionContext);\r\n  const insets = useSafeAreaInsets();\r\n\r\n  const isRight = I18nManager.isRTL\r\n    ? drawerPosition === 'left'\r\n    : drawerPosition === 'right';\r\n\r\n  return (\r\n    <ScrollView\r\n      {...rest}\r\n      ref={ref}\r\n      contentContainerStyle={[\r\n        {\r\n          paddingTop: insets.top + 4,\r\n          paddingStart: !isRight ? insets.left : 0,\r\n          paddingEnd: isRight ? insets.right : 0,\r\n        },\r\n        contentContainerStyle,\r\n      ]}\r\n      style={[styles.container, style]}\r\n    >\r\n      {children}\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nexport default React.forwardRef(DrawerContentScrollView);\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n});\r\n"]}